/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import DataBase.DoctorDirectory;
import DataBase.HospitalDirectory;
import DataBase.PatientDirectory;
import System.Doctor;
import System.Encounter;
import System.Hospital;
import System.Patient;
import static java.awt.image.ImageObserver.WIDTH;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Zaniar
 */
public class PatientView extends javax.swing.JPanel {

    /**
     * Creates new form PatientView
     */
    HospitalDirectory hospitaldirectory;
    DoctorDirectory doctordirectory;
    PatientDirectory patientdirectory;
    Patient userObj;
    Doctor selectedD;
    
    
    public PatientView(String user,HospitalDirectory hospitaldirectory, DoctorDirectory doctordirectory,PatientDirectory patientdirectory) {
        initComponents();
        this.hospitaldirectory = hospitaldirectory;
        this.doctordirectory = doctordirectory;
        this.patientdirectory = patientdirectory;
        userObj = ObjReturn(user);
        if (userObj.getFirstName() == null){
            JFrame frame = new JFrame();
            frame.setSize(900, 700);
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            PInfoCollect newView =  new PInfoCollect(userObj);
            frame.add(newView);
            frame.setVisible(true);
        }
        populateHTable(hospitaldirectory);
        
    }

    public Patient ObjReturn(String user){
        /**
            *
            * @param user
            */
        /**
            *
            * @return Patient
            */
        for(Patient p:patientdirectory.getAllusers()){
            if (p.getUser().equals(user)){
        return p;
        }
        }
            
        
    return null;
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        doctorTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        Dbuttton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        SelectButton = new javax.swing.JButton();
        DField = new javax.swing.JTextField();
        SendButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BPField = new javax.swing.JTextField();
        HRField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        DescField = new javax.swing.JTextArea();

        doctorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane1.setViewportView(doctorTable);

        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Adress"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(hospitalTable);

        Dbuttton.setText("Doctors >>");
        Dbuttton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DbutttonActionPerformed(evt);
            }
        });

        jLabel1.setText("Selected Doctor :");

        SelectButton.setText("Select");
        SelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButtonActionPerformed(evt);
            }
        });

        DField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DFieldActionPerformed(evt);
            }
        });

        SendButton.setText("Send Info");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Heart Rate :");

        jLabel3.setText("Blood Presure : ");

        jLabel4.setText("Descrption : ");

        BPField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BPFieldActionPerformed(evt);
            }
        });

        HRField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HRFieldActionPerformed(evt);
            }
        });

        DescField.setColumns(20);
        DescField.setRows(5);
        jScrollPane3.setViewportView(DescField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(Dbuttton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(BPField))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(HRField, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SelectButton)
                .addGap(177, 177, 177))
            .addGroup(layout.createSequentialGroup()
                .addGap(354, 354, 354)
                .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(Dbuttton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SelectButton)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(BPField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(DField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(HRField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(SendButton)
                .addGap(74, 74, 74))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DbutttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DbutttonActionPerformed
        // TODO add your handling code here:
        populateDTable();
        
    }//GEN-LAST:event_DbutttonActionPerformed

    private void DFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DFieldActionPerformed

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        // TODO add your handling code here:
       Encounter enc = new Encounter();
       enc.setBP(BPField.getText());
       enc.setDescription(DescField.getText());
       enc.setHeartRate(HRField.getText());
       enc.setDoctor(selectedD);
       userObj.getHistory().addenc(enc);
       
       clean();
        
    }//GEN-LAST:event_SendButtonActionPerformed

    private void BPFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BPFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BPFieldActionPerformed

    private void HRFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HRFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HRFieldActionPerformed

    private void SelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = doctorTable.getSelectedRow();
        if (selectedIndex < 0){
        JOptionPane.showMessageDialog(this, "Please Select a Doctor");
        } else {
            DefaultTableModel model =  (DefaultTableModel) doctorTable.getModel();
            Doctor selectedD = (Doctor) model.getValueAt(selectedIndex, WIDTH);
            this.selectedD = selectedD;
            DField.setText(selectedD.getFirstName() + selectedD.getLastName());
           
        
    }//GEN-LAST:event_SelectButtonActionPerformed
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BPField;
    private javax.swing.JTextField DField;
    private javax.swing.JButton Dbuttton;
    private javax.swing.JTextArea DescField;
    private javax.swing.JTextField HRField;
    private javax.swing.JButton SelectButton;
    private javax.swing.JButton SendButton;
    private javax.swing.JTable doctorTable;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
public void populateHTable(HospitalDirectory hospitaldirectory) {
        DefaultTableModel model =  (DefaultTableModel) hospitalTable.getModel();
        model.setRowCount(0);
        if(hospitaldirectory.getAllusers() != null){
        for (Hospital h: hospitaldirectory.getAllusers()){
            Object[] row = new Object[2];
            row[0] = h.getName();
            row[1] = h.getAdress();
            model.addRow(row);
            
        }}
       }
public void populateDTable() {
        int selectedIndex = hospitalTable.getSelectedRow();
        if (selectedIndex < 0){
        JOptionPane.showMessageDialog(this, "Please Select a Hospital");
        } else {
            DefaultTableModel model =  (DefaultTableModel) doctorTable.getModel();
            model.setRowCount(0);
            Hospital selectedH = (Hospital) model.getValueAt(selectedIndex, WIDTH);
            for (Doctor h: selectedH.getDocList()){
                Object[] row = new Object[1];
                row[0] = h;
                model.addRow(row);
            
        }
       }
}
  private void clean(){
        BPField.setText("");
        HRField.setText("");
        DField.setText("");
        DescField.setText("");
   
        
        }
    



}
